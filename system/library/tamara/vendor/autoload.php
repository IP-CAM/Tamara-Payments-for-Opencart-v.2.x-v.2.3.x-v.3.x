<?php

// scoper-autoload.php @generated by PhpScoper

$loader = require_once __DIR__.'/_autoload.php';

// Aliases for the whitelisted classes. For more information see:
// https://github.com/humbug/php-scoper/blob/master/README.md#class-whitelisting
class_exists('TMS\ComposerAutoloaderInit049a51f86cd54bba0818c4d2899eb33c');
//class_exists('TMS\Normalizer');
class_exists('TMS\JsonException');
class_exists('TMS\Attribute');
class_exists('TMS\PhpToken');
class_exists('TMS\Stringable');
class_exists('TMS\UnhandledMatchError');
class_exists('TMS\ValueError');

// Functions whitelisting. For more information see:
// https://github.com/humbug/php-scoper/blob/master/README.md#functions-whitelisting
if (!function_exists('apcu_fetch')) {
    function apcu_fetch() {
        return \TMS\apcu_fetch(...func_get_args());
    }
}
if (!function_exists('composerRequire049a51f86cd54bba0818c4d2899eb33c')) {
    function composerRequire049a51f86cd54bba0818c4d2899eb33c() {
        return \TMS\composerRequire049a51f86cd54bba0818c4d2899eb33c(...func_get_args());
    }
}
if (!function_exists('sodium_crypto_sign_detached')) {
    function sodium_crypto_sign_detached() {
        return \TMS\sodium_crypto_sign_detached(...func_get_args());
    }
}
if (!function_exists('sodium_crypto_sign_verify_detached')) {
    function sodium_crypto_sign_verify_detached() {
        return \TMS\sodium_crypto_sign_verify_detached(...func_get_args());
    }
}
if (!function_exists('hrtime')) {
    function hrtime() {
        return \TMS\hrtime(...func_get_args());
    }
}
if (!function_exists('uri_template')) {
    function uri_template() {
        return \TMS\uri_template(...func_get_args());
    }
}
if (!function_exists('getallheaders')) {
    function getallheaders() {
        return \TMS\getallheaders(...func_get_args());
    }
}
if (!function_exists('setproctitle')) {
    function setproctitle() {
        return \TMS\setproctitle(...func_get_args());
    }
}
if (!function_exists('sapi_windows_cp_set')) {
    function sapi_windows_cp_set() {
        return \TMS\sapi_windows_cp_set(...func_get_args());
    }
}
if (!function_exists('fastcgi_finish_request')) {
    function fastcgi_finish_request() {
        return \TMS\fastcgi_finish_request(...func_get_args());
    }
}
if (!function_exists('igbinary_serialize')) {
    function igbinary_serialize() {
        return \TMS\igbinary_serialize(...func_get_args());
    }
}
if (!function_exists('mb_ord')) {
    function mb_ord() {
        return \TMS\mb_ord(...func_get_args());
    }
}
if (!function_exists('mb_chr')) {
    function mb_chr() {
        return \TMS\mb_chr(...func_get_args());
    }
}
if (!function_exists('mb_scrub')) {
    function mb_scrub() {
        return \TMS\mb_scrub(...func_get_args());
    }
}
if (!function_exists('mb_str_split')) {
    function mb_str_split() {
        return \TMS\mb_str_split(...func_get_args());
    }
}
if (!function_exists('is_countable')) {
    function is_countable() {
        return \TMS\is_countable(...func_get_args());
    }
}
if (!function_exists('array_key_first')) {
    function array_key_first() {
        return \TMS\array_key_first(...func_get_args());
    }
}
if (!function_exists('array_key_last')) {
    function array_key_last() {
        return \TMS\array_key_last(...func_get_args());
    }
}
if (!function_exists('fdiv')) {
    function fdiv() {
        return \TMS\fdiv(...func_get_args());
    }
}
if (!function_exists('preg_last_error_msg')) {
    function preg_last_error_msg() {
        return \TMS\preg_last_error_msg(...func_get_args());
    }
}
if (!function_exists('str_contains')) {
    function str_contains() {
        return \TMS\str_contains(...func_get_args());
    }
}
if (!function_exists('str_starts_with')) {
    function str_starts_with() {
        return \TMS\str_starts_with(...func_get_args());
    }
}
if (!function_exists('str_ends_with')) {
    function str_ends_with() {
        return \TMS\str_ends_with(...func_get_args());
    }
}
if (!function_exists('get_debug_type')) {
    function get_debug_type() {
        return \TMS\get_debug_type(...func_get_args());
    }
}
if (!function_exists('get_resource_id')) {
    function get_resource_id() {
        return \TMS\get_resource_id(...func_get_args());
    }
}

return $loader;
